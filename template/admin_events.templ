package template

import "JosefKuchar/iis-project/models"
import "strconv"
import "JosefKuchar/iis-project/settings"

type AdminEventsPageData struct {
	Events []models.Event
    TotalCount int
    Page int
    Query string
    UserRole int
}

templ AdminEventsPage(data AdminEventsPageData, appbar AppbarData) {
	@Appbar("Události", appbar) {
		@AdminEventsPageTable(data, appbar, false)
	}
}

templ AdminEventsPageTable(data AdminEventsPageData, appbar AppbarData, standalone bool) {
	<form id="table" hx-swap="morph">
		@AdminTableDecorator("Události", "/admin/events", "Nová událost", data.Query, data.TotalCount, data.Page, data.UserRole != settings.ROLE_USER) {
			<table class="table table-zebra">
				<tr>
					<th>ID</th>
					<th>Název</th>
					<th>Schváleno</th>
					<th>Akce</th>
				</tr>
				for _, event := range data.Events {
					@AdminTableRow("/admin/events", event.ID) {
						<td>{ strconv.Itoa(int(event.ID)) }</td>
						<td>{ event.Name }</td>
						<td>
							@AdminTableApproveButton("/admin/events", event.ID, event.Approved, data.UserRole == settings.ROLE_USER)
						</td>
						<td>
							@AdminTableDeleteButton("/admin/events", event.ID)
						</td>
					}
				}
			</table>
		}
	</form>
	if standalone {
		@AppbarStandalone(appbar, true)
	}
}

type AdminEventPageData struct {
	Event models.Event
    Errors map[string]string
    New bool
    UserRole int
}

templ AdminEventPage(data AdminEventPageData, appbar AppbarData) {
	@Appbar("Detail událost", appbar) {
		if data.New {
			@AdminDetailHeader() {
				Nová událost
			}
		} else {
			@AdminDetailHeader() {
				Událost
				{ data.Event.Name }
			}
		}
		@AdminEventPageForm(data)
		<script>
            $(document).ready(function() {
                $('#location_id').select2({
                    ajax: {
                        url: '/admin/locations/select2',
                        dataType: 'json'
                    },
                    placeholder: 'Žádné'
                });
                $('#owner_id').select2({
                    ajax: {
                        url: '/admin/users/select2',
                        dataType: 'json'
                    },
                    placeholder: 'Žádné'
                });
                $('#categories').select2({
                    ajax: {
                        url: '/admin/categories/select2',
                        dataType: 'json'
                    },
                    allowClear: true,
                    placeholder: 'Žádná'
                });
                // Stop propagation of keyup event from textarea so it doesn't interfere with htmx
                $('.select2-search__field').on('keyup', function (e) {
                    e.stopPropagation();
                });
            });
        </script>
	}
}

templ AdminEventPageForm(data AdminEventPageData) {
	<form
 		hx-trigger="keyup delay:300ms, change from:#approved"
 		hx-swap="morph"
 		hx-post={ "/admin/events/" + strconv.Itoa(int(data.Event.ID)) + "/form" }
 		id="event-detail-form"
	>
		@AdminNewField(data.New)
		@AdminTextField(data.Event.Name, data.Errors["Name"], "name", "Název *")
		@AdminSelectMulti(data.Errors["Categories"], "categories", "Kategorie") {
			for _, category := range data.Event.Categories {
				<option value={ strconv.Itoa(int(category.ID)) } selected>{ category.Name }</option>
			}
		}
		@AdminSelect(data.Errors["Location"], "location_id", "Místo *") {
			if data.Event.Location != nil {
				<option value={ strconv.Itoa(int(data.Event.Location.ID)) } selected>{ data.Event.Location.Name }</option>
			}
		}
        @AdminSelect(data.Errors["Owner"], "owner_id", "Organizátor *") {
			if data.Event.Owner != nil {
				<option value={ strconv.Itoa(int(data.Event.Owner.ID)) } selected>{ data.Event.Owner.Name }</option>
			}
		}
		@AdminDatetime(data.Event.Start, data.Errors["Start"], "start", "Začátek *")
		@AdminDatetime(data.Event.End, data.Errors["End"], "end", "Konec *")
		@AdminNumberField(data.Event.Capacity, data.Errors["Capacity"], "capacity", "Kapacita", "Osob")
		@AdminTextarea(data.Event.Description, data.Errors["Description"], "description", "Popis *")
		<div class="flex items-center justify-between">
			<h2 class="text-lg">Kategorie vstupného</h2>
			<button
 				class="btn"
 				hx-post={ "/admin/events/" + strconv.Itoa(int(data.Event.ID)) + "/form/add-fee" }
 				hx-target="#event-detail-form"
 				hx-swap="morph"
			>
				<i class="las la-plus"></i>
				Nová kategorie vstupného
			</button>
		</div>
		for i, entranceFee := range data.Event.EntranceFees {
			<input type="hidden" name="entranceFeeID[]" value={ strconv.Itoa(int(entranceFee.ID)) }/>
			<div class="flex gap-4 items-center">
				<div class="grow">
					@AdminTextField(entranceFee.Name, "", "entranceFeeName[]", "Název")
				</div>
				<div class="grow">
					@AdminNumberField(entranceFee.Price, "", "entranceFeePrice[]", "Cena", "Kč")
				</div>
				<button
 					class="btn btn-md btn-outline btn-sm tooltip mb-1"
 					data-tip="Smazat"
 					hx-post={ "/admin/events/" + strconv.Itoa(int(data.Event.ID)) + "/form/delete-fee/" + strconv.Itoa(i) }
 					hx-target="#event-detail-form"
 					hx-swap="morph"
				>
					<i class="las la-trash text-xl"></i>
				</button>
			</div>
		}
		if data.UserRole != settings.ROLE_USER {
            <div class="my-6">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-lg">Účastníci</h2>
                </div>
                <div class="divide-y flex flex-col divide-base-200 border-t border-b border-base-200" id="event_users">
                    @AdminEventUsers(data.Event.UsersToEvent, data.Event.ID)
                </div>
            </div>
		}
        <div class="flex items-center justify-between mt-10">
		    @AdminCheckbox(data.Event.Approved, "approved", "Schváleno")
            <div>
                if data.New {
                    <a href="/admin/events" hx-push-url="true" hx-swap="innerHTML" class="btn">Zrušit</a>
                    <button class="btn btn-primary" type="submit" hx-post="/admin/events/new"
						if len(data.Errors) != 0 {
							disabled="disabled"
						}
					>Vytvořit událost</button>
                } else {
                    <button
                        class="btn"
                        hx-delete={ "/admin/events/" + strconv.Itoa(int(data.Event.ID)) }
                        hx-confirm="Opravdu chcete smazat událost?"
                    >Smazat</button>
                    <button class="btn btn-primary" type="submit" hx-post={ "/admin/events/" + strconv.Itoa(int(data.Event.ID)) }
						if len(data.Errors) != 0 {
							disabled="disabled"
						}
					>Uložit</button>
                }
            </div>
        </div>
	</form>
}

templ AdminEventUsers(data []models.UserToEvent, eventId int64) {
for _, participant := range data {
    <div class="flex gap-4 items-center justify-between py-2">
        <div>
            <div>{ participant.User.Name }</div>
            <div class="text-xs">{ participant.EntranceFee.Name }</div>
        </div>
        <div class="form-control flex-row gap-6 items-center">
            <label class="label flex items-center gap-2 cursor-pointer">
                <span class="label-text">Zaplaceno</span>
                <input
                    type="checkbox"
                    class="toggle"
                    hx-post={ "/admin/events/" + strconv.Itoa(int(eventId)) + "/" + strconv.Itoa(int(participant.User.ID)) + "/paid" }
                    hx-target="#event_users"
                    hx-trigger="change"
                    id={ strconv.Itoa(int(participant.User.ID)) }
                    name={ strconv.Itoa(int(participant.User.ID)) }
                    if participant.Approved {
                        checked="checked"
                    }
                />
            </label>
            <button
 				class="btn btn-outline btn-sm tooltip mb-1"
 				data-tip="Smazat"
                hx-post={ "/admin/events/" + strconv.Itoa(int(eventId)) + "/" + strconv.Itoa(int(participant.User.ID)) + "/remove" }
 				hx-target="#event_users"
			>
				<i class="las la-trash text-xl"></i>
			</button>
        </div>
    </div>
}
}
