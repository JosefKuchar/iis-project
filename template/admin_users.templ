package template

import (
	"JosefKuchar/iis-project/models"
    "strconv"
)

type AdminUsersPageData struct {
	Users []models.User
    TotalCount int
    Page int
    Query string
    OwnID int
}

templ AdminUsersPage(data AdminUsersPageData, appbar AppbarData) {
    @Appbar("Uživatelé", appbar) {
        @AdminUsersPageTable(data)
    }
}

templ AdminUsersPageTable(data AdminUsersPageData) {
    <form id="table" hx-swap="morph">
        @AdminTableDecorator("Uživatelé", "/admin/users", "Nový uživatel", data.Query, data.TotalCount, data.Page, true) {
            <table class="table table-zebra">
                <tr>
                    <th>ID</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Akce</th>
                </tr>
                for _, user := range data.Users {
                    @AdminTableRow("/admin/users", user.ID) {
                        <td>{ strconv.Itoa(int(user.ID)) }</td>
                        <td>{ user.Email }</td>
                        if user.Role == nil {
                            <td>Neznámá</td>
                        } else {
                            <td>{ user.Role.Name }</td>
                        }
                        <td>
                            if int(user.ID) != data.OwnID {
                                @AdminTableDeleteButton("/admin/users", user.ID)
                            }
                        </td>
                    }
                }
            </table>
        }
    </form>
}

type AdminUserPageData struct {
	User models.User
    Roles []models.Role
    Errors map[string]string
    New bool
    Own bool
}

templ AdminUserPage(data AdminUserPageData, appbar AppbarData) {
    @Appbar("Detail uživatele", appbar) {
        if data.New {
            @AdminDetailHeader() {
                Nový uživatel
            }
        } else {
            @AdminDetailHeader() {
                Uživatel { data.User.Name }
            }
        }
        @AdminUserPageForm(data)
        <script>
            $(document).ready(function() {
                $('#role_id').select2();
            });
        </script>
    }
}

templ AdminUserPageForm(data AdminUserPageData) {
    <form
        hx-trigger="keyup delay:300ms, change from:#role_id"
        hx-swap="morph"
        hx-post={ "/admin/users/" + strconv.Itoa(int(data.User.ID)) + "/form" }
        id="user-detail-form"
    >
        @AdminNewField(data.New)
        @AdminTextField(data.User.Name, data.Errors["Name"], "name", "Jméno *")
        @AdminTextField(data.User.Email, data.Errors["email"], "email", "Email *")
        if data.New {
            @AdminPasswordField(data.User.Password, data.Errors["Password"], "password", "Heslo *")
        } else {
            @AdminPasswordField(data.User.Password, data.Errors["Password"], "password", "Heslo (zadejte pouze pokud chcete změnit)")
        }
        if !data.Own {
            @AdminSelect(data.Errors["Role"], "role_id", "Role *") {
                for _, role := range data.Roles {
                    <option
                        value={ strconv.Itoa(int(role.ID)) }
                        if role.ID == data.User.RoleID {
                            selected="selected"
                        }
                    >
                        { role.Name }
                    </option>
                }
            }
        }
        if data.New {
            <button class="btn btn-primary" type="submit" hx-post="/admin/users/new">Vytvořit uživatele</button>
            <a href="/admin/users" hx-push-url="true" hx-swap="innerHTML" class="btn">Zrušit</a>
        } else {
            <button class="btn btn-primary" type="submit" hx-post={ "/admin/users/" + strconv.Itoa(int(data.User.ID)) }>Uložit</button>
            if !data.Own {
                <button
                    class="btn"
                    hx-delete={ "/admin/users/" + strconv.Itoa(int(data.User.ID)) }
                    hx-confirm="Opravdu chcete smazat uživatele?"
                >Smazat</button>
            }
        }

    </form>
}
