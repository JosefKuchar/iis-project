package template

import (
	"JosefKuchar/iis-project/cmd/models"
    "strconv"
)

type AdminUsersPageData struct {
	Users []models.User
    TotalCount int
    Page int
    Query string
}

templ AdminUsersPage(data AdminUsersPageData) {
    @AdminIndex("Uživatelé") {
        @AdminUsersPageTable(data)
    }
}

templ AdminUsersPageTable(data AdminUsersPageData) {
    <form id="table" hx-swap="morph">
        @AdminTableDecorator("Uživatelé", "/admin/users", "Nový uživatel", data.Query, data.TotalCount, data.Page) {
            <table class="table table-zebra">
                <tr>
                    <th>ID</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Akce</th>
                </tr>
                for _, user := range data.Users {
                    @AdminTableRow("/admin/users", user.ID) {
                        <td>{ strconv.Itoa(int(user.ID)) }</td>
                        <td>{ user.Email }</td>
                        if user.Role == nil {
                            <td>Neznámá</td>
                        } else {
                            <td>{ user.Role.Name }</td>
                        }
                        <td>
                            @AdminTableDeleteButton("/admin/users", user.ID)
                        </td>
                    }
                }
            </table>
        }
    </form>
}

type AdminUserPageData struct {
	User models.User
    Roles []models.Role
    Errors map[string]string
    New bool
}

templ AdminUserPage(data AdminUserPageData) {
    @AdminIndex("Detail uživatele") {
        if data.New {
            <h1>Nový uživatel</h1>
        } else {
            <h1>Uživatel { data.User.Name }</h1>
        }
        @AdminUserPageForm(data)
        <script>
            $(document).ready(function() {
                $('#role_id').select2();
            });
        </script>
    }
}

templ AdminUserPageForm(data AdminUserPageData) {
    <form
        hx-trigger="keyup delay:300ms, change from:#role_id"
        hx-swap="morph"
        hx-post={ "/admin/users/" + strconv.Itoa(int(data.User.ID)) + "/form" }
        id="user-detail-form"
    >
        <input type="hidden" name="new" value={ strconv.FormatBool(data.New) } />
        <div class="form-control">
            <label class="label">
                <span class="label-text">Jméno *</span>
            </label>
            <input
                type="text"
                class={"input input-bordered", templ.KV("input-error", data.Errors["Name"] != "") }
                name="name"
                id="name"
                value={ data.User.Name }
            />
            <label class="label">
                <div class="text-error">{ data.Errors["Name"] }&nbsp;</div>
            </label>
        </div>
        <div class="form-control">
            <label class="label">
                <span class="label-text">Email *</span>
            </label>
            <input
                type="text"
                class={"input input-bordered", templ.KV("input-error", data.Errors["Email"] != "") }
                name="email"
                value={ data.User.Email }
            />
            <label class="label">
            <div class="text-error">{ data.Errors["Email"] }&nbsp;</div>
            </label>
        </div>
        <div class="form-control" id="role_id_form_control" hx-preserve>
            <label class="label">
                <span class="label-text">Role *</span>
            </label>
            <select
                name="role_id"
                id="role_id"
            >
            for _, role := range data.Roles {
                <option
                    value={ strconv.Itoa(int(role.ID)) }
                    if role.ID == data.User.RoleID {
                        selected="selected"
                    }
                >
                    { role.Name }
                </option>
            }
            </select>
            <label class="label">
            <div class="text-error">{ data.Errors["Role"] }&nbsp;</div>
            </label>
        </div>
        if data.New {
            <button class="btn btn-primary" type="submit" hx-post="/admin/users/new">Vytvořit uživatele</button>
            <a href="/admin/users" hx-push-url="true" hx-swap="innerHTML" class="btn">Zrušit</a>
        } else {
            <button class="btn btn-primary" type="submit" hx-post={ "/admin/users/" + strconv.Itoa(int(data.User.ID)) }>Uložit</button>
            <button
                class="btn"
                hx-delete={ "/admin/users/" + strconv.Itoa(int(data.User.ID)) }
                hx-confirm="Opravdu chcete smazat uživatele?"
            >Smazat</button>
        }

    </form>
}
