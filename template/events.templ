package template

import (
	"JosefKuchar/iis-project/models"
    "strconv"
)

type EventsPageData struct {
    Categories []models.Category
    Locations []models.Location
    SelectedCategories []models.Category
    Events []models.Event
    LoggedIn bool
}

templ SelectMulti(name string, title string) {
    <div class="form-control" id={ name + "_form_control"} hx-preserve>
        <label class="label">
            <span class="label-text">{ title }</span>
        </label>
        <select
            name={ name + "[]" }
            id={ name }
            multiple="multiple"
        >
            { children... }
        </select>
        <label class="label">
        </label>
    </div>
}

templ EventsPage(data EventsPageData, appbar AppbarData) {
    @Appbar("Události", appbar) {
        <h1 class="text-3xl text-center m-10">Události</h1>
        <div hx-get="/user" hx-trigger="load" class="my-5"></div>
        <div class="grid grid-cols-1">
            <form hx-target="#eventList" hx-post="/events/filter">
                <div class="form-control my-5">
                    <label class="label"><span class="label-text">Search</span></label>
                    <input type="text" class="input input-bordered w-full max-w-s" name="slug" id="slug"/>
                </div>
                <div class="flex gap-x-5 my-5">
                    <div class="flex flex-col w-1/2 form-control">
                        <label class="label"><span class="label-text">From</span></label>
                        <input type="datetime-local" class="input input-bordered" name="from" id="from"/>
                    </div>
                    <div class="flex flex-col w-1/2 form-control">
                        <label class="label"><span class="label-text">To</span></label>
                        <input type="datetime-local" class="input input-bordered" name="to" id="to"/>
                    </div>
                </div>
                <div class="form-control my-5">
                    <label for="location" class="label label-text">Select Location</label>
                    <select class="select select-bordered" name="location" id="location">
                        <option value="0">Select location</option>
                        for _, location := range data.Locations {
                            <option value={ strconv.Itoa(int(location.ID)) }>{ location.Name }</option>
                        }
                    </select>
                </div>
                <div class="form-control my-5">
                    <label class="label label-text">Select Categories</label>
                    <select name="categories" id="categories" multiple="multiple">
                        for _, category := range data.Categories {
                            <option value={ strconv.Itoa(int(category.ID)) }>{ category.Name }</option>
                        }
                    </select>
                </div>
                <div class="form-control w-full max-w-s my-5">
                    <label class="label cursor-pointer">
                        <span class="label-text">Show only my events</span>
                        if data.LoggedIn {
                            <input type="checkbox" class="checkbox checkbox-primary" name="myEvents"/>
                        }  else {
                            <div class="lg:tooltip" data-tip="Log in to filter your events">
                                <input type="checkbox" class="checkbox checkbox-primary" name="myEvents" disabled="true"/>
                            </div>
                        }
                    </label>
                    <button class="btn btn-primary" type="submit">Filter</button>
                </div>
            </form>
        </div>
        <div id="eventList">
            @Events(data.Events)
        </div>
        <script>
            $(document).ready(function() {
                $('#categories').select2({
                    ajax: {
                        url: '/events/categories/select2',
                        dataType: 'json'
                    },
                    allowClear: true,
                    placeholder: 'Žádná'
                });
            });
        </script>
    }
}

templ Categories(categories []models.Category) {
    for _, category := range categories {
        <div class="badge badge-primary p-3">{ category.Name }</div>
    }
}

templ Events(events []models.Event) {
    <div class="grid grid-cols-4 gap-10">
        for _, event := range events {
            <a href={ templ.URL("/events/" + strconv.Itoa(int(event.ID))) } class="card bg-base-200 hover:opacity-80 hover:cursor-pointer" >
                <figure>
                    <img src={"https://picsum.photos/seed/" + strconv.Itoa(int(event.ID)) + "/500/200"} />
                </figure>
                <div class="card-body">
                    <h2 class="card-title">
                        <span class="text-xl text-secondary">#{ strconv.Itoa(int(event.ID)) }</span> { event.Name }
                    </h2>
                    <div class="flex items-center">
                        <i class="las la-map-marker-alt"></i>
                        <div class="ml-1">{ event.Location.Name }</div>
                    </div>
                    <div class="flex flex-wrap gap-2">
                        @Categories(event.Categories)
                    </div>
                </div>
            </a>
        }
    </div>
}
