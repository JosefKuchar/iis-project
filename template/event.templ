package template

import (
	"JosefKuchar/iis-project/models"
	"JosefKuchar/iis-project/settings"
	"strconv"
	"fmt"
)

type EventPageData struct {
	Event models.Event
	Categories [][]models.Category
	UserId int
	Finished bool
	RegisteredFee *models.UserToEvent
	Full bool
	UserRating int64
	AverageRating float64
}

templ EventPage(data EventPageData, appbar AppbarData) {
	@Appbar("Detail události", appbar) {
		<h1 class="text-3xl text-center m-10">{ data.Event.Name }</h1>
		<div class="flex justify-between">
			@CategoriesSection(data.Categories)
			if data.Finished {
				@AverageRating(data.AverageRating, int(data.Event.ID))
			}
		</div>
		<div class="my-6">
			<div class="flex justify-between">
				<div class="flex flex-col gap-y-2 mb-8">
					<div class="flex items-center">
						<i class="las la-map-marker-alt text-xl"></i>
						<div class="ml-1 text-xl font-bold">{ data.Event.Location.Name }</div>
					</div>
					<div class="ml-1 text-sm">
						{ data.Event.Location.Street + ", " + data.Event.Location.City + " " + data.Event.Location.Zip }
					</div>
					<div class="flex items-center">
						<i class="las la-user text-xl"></i>
						<div class="ml-1 text-xl font-bold">
							if data.Event.Capacity == 0  {
									{ strconv.Itoa(len(data.Event.UsersToEvent)) + "/" + "∞" }
								} else {
									{ strconv.Itoa(len(data.Event.UsersToEvent)) + "/" + strconv.Itoa(int(data.Event.Capacity)) }
							}
						</div>
					</div>
				</div>
				<div class="text-right flex items-center">
					<div class="text-lg">{ data.Event.Start.Format("02.01.2006 15:04") + " - " + data.Event.End.Format("02.01.2006 15:04")}</div>
					<i class="las la-calendar ml-2 text-xl"></i>
				</div>
			</div>

			<p class="text-s uppercase font-bold">Popis</p>
			<p>
				{ data.Event.Description }
			</p>
		</div>
		<hr class="h-px my-2 bg-border opacity-[15%]"/>
		if (!data.Finished) {
			<div class="my-10" id="registerSection">
				@RegisterSection(data.UserId, data.Finished, int(data.Event.ID), data.Event.EntranceFees, data.RegisteredFee, data.Full)
			</div>
		}
		<div>
			@CommentInput(data)
		</div>
		<div id="comments">
			@Comments(data.Event.Comments, appbar)
		</div>
	}
}

templ RatingsSection(rating int64) {
	<div class="rating">
		<input type="radio" name="rating-9" class="rating-hidden" value={"0"} checked/>
		for i := 1; i <= 5; i++ {
			<input type="radio" name="rating-9" class="mask mask-star-2" value={fmt.Sprint(i)} if rating >= int64(i) {
				checked="checked"
			}/>
		}
	</div>
}

templ CategoriesSection(categoryHierarchy [][]models.Category) {
	<div class="flex">
		for _, categories := range categoryHierarchy {
			<div class="badge badge-primary m-2">
				<div class="flex breadcrumbs">
				<ul>
					for _, category := range categories {
						<li><div>{ category.Name }</div></li>
					}
				</ul>
				</div>
			</div>
		}
	</div>
}

templ RegisterSection(userId int, finished bool, eventId int, entranceFees []models.EntranceFee, registeredFee *models.UserToEvent, full bool) {
	if registeredFee != nil {
		<div class="mb-1">Ste přihlásený na tenhle event:</div>
		<div class="p-4 rounded-xl border border-border border-opacity-[15%] flex justify-between items-center">
			<div class="space-y-1">
				<div class="text-sm text-primary font-semibold">
					{ registeredFee.EntranceFee.Name }
				</div>
				<div class="text-sm">
					{ strconv.Itoa(int(registeredFee.EntranceFee.Price)) + " CZK"}
				</div>
			</div>
			<div class="flex items-center gap-6">
				if registeredFee.Approved {
					<span class="text-green-500">Zaplaceno</span>
				} else {
					<span class="text-red-500">Nezaplaceno</span>
				}
				<button hx-target="#registerSection" class="btn btn-primary" hx-post={"/events/" + strconv.Itoa(eventId) + "/" + strconv.Itoa(userId) + "/" + strconv.Itoa(int(registeredFee.EntranceFee.ID)) + "/unregister" }>Odhlásit se</button>
			</div>
		</div>
	} else {
		<div class="mb-1 text-xs uppercase font-bold">Vstupenky</div>
		<div class="space-y-2">
			for _, eventFee := range entranceFees {
				<div class="p-4 rounded-xl border border-border border-opacity-[15%] flex justify-between items-center">
					<div class="space-y-1">
						<div class="text-sm text-primary font-semibold">
							{ eventFee.Name }
						</div>
						<div class="text-sm">
							{ strconv.Itoa(int(eventFee.Price)) + " CZK" }
						</div>
					</div>
					if (userId != -1 && !full) {
						<button class="btn btn-primary" hx-target="#registerSection" hx-post={"/events/" + strconv.Itoa(eventId) + "/" + strconv.Itoa(userId) + "/" + strconv.Itoa(int(eventFee.ID)) + "/register" }>Přihlásit se</button>
					}
					if (full) {
						<span class="text-red-500">Plno</span>
					}
				</div>
			}
		</div>
	}
}

templ Comments(comments []models.Comment, appbar AppbarData) {
	<ul>
		for _, comment := range comments {
			<li class="flex my-5">
				<div class="chat chat-start items-end flex">
					<div class="avatar placeholder">
						<div class="bg-neutral-focus text-neutral-content rounded-full w-16">
							<span class="text-xl">{comment.User.Email[:2]}</span>
						</div>
					</div>
					<div class="chat-bubble">{ comment.Text }</div>
					if appbar.User.RoleID == settings.ROLE_ADMIN || appbar.User.RoleID == settings.ROLE_MODERATOR {
						<a href={templ.URL("/admin/comments/" + strconv.Itoa(int(comment.ID)))} class="btn">
							<i class="las la-pen"></i>
						</a>
					}
				</div>
			</li>
		}
	</ul>
}

templ CommentInput(data EventPageData) {
		if data.Finished {
			<div class="flex justify-between">
				<div class="flex flex-col">
					<div class="text-xs uppercase font-bold mb-5 ml-1"/>
					<div class="text-xs uppercase font-bold">
						Komentáře
					</div>
				</div>
				<div class="flex flex-col text-right">
					<div class="text-xs uppercase font-bold mb-5 ml-1">
						Vaše hodnocení
					</div>
					<form hx-post={"/events/" + strconv.Itoa(int(data.Event.ID)) + "/" + strconv.Itoa(data.UserId) + "/rate"} hx-trigger="change" hx-swap="none">
						@RatingsSection(data.UserRating)
					</form>
				</div>
			</div>
		}
		<p>
			if data.Finished && data.UserId != -1 {
				<form class="form-control" hx-on::after-request="this.reset()">
					<textarea class="textarea textarea-bordered h-24" placeholder="Váš komentář" name="comment" id="comment"></textarea>

					<button class="btn btn-primary mt-4" type="submit" hx-target="#comments" hx-post={ "/events/" + strconv.Itoa(int(data.Event.ID)) + "/" + strconv.Itoa(int(data.UserId)) + "/comment" }>Přidat</button>

				</form>
			}
		</p>
}
