package template

import "JosefKuchar/iis-project/models"
import "strconv"

type AdminLocationsPageData struct {
	Locations []models.Location
    TotalCount int
    Page int
    Query string
}


templ AdminLocationsPage(data AdminLocationsPageData, appbar AppbarData) {
    @Appbar("Místa", appbar) {
        @AdminLocationsPageTable(data, appbar, false)
    }
}

templ AdminLocationsPageTable(data AdminLocationsPageData, appbar AppbarData, standalone bool) {
    <form id="table" hx-swap="morph">
        @AdminTableDecorator("Místa", "/admin/locations", "Nové místo", data.Query, data.TotalCount, data.Page, true) {
            <table class="table table-zebra">
                <tr>
                    <th>ID</th>
                    <th>Název</th>
                    <th>Schváleno</th>
                    <th>Akce</th>
                </tr>
                for _, location := range data.Locations {
                    @AdminTableRow("/admin/locations", location.ID) {
                        <td>{ strconv.Itoa(int(location.ID)) }</td>
                        <td>{ location.Name }</td>
                        <td>
                            @AdminTableApproveButton("/admin/locations", location.ID, location.Approved, false)
                        </td>
                        <td>
                            @AdminTableDeleteButton("/admin/locations", location.ID)
                        </td>
                    }
                }
            </table>
        }
    </form>
    if standalone {
        @AppbarStandalone(appbar, true)
    }
}

type AdminLocationPageData struct {
	Location models.Location
    Errors map[string]string
    New bool
}

templ AdminLocationPage(data AdminLocationPageData, appbar AppbarData) {
    @Appbar("Detail kategorie", appbar) {
        if data.New {
            @AdminDetailHeader() {
                Nové místo
            }
        } else {
            @AdminDetailHeader() {
                Místo { data.Location.Name }
            }
        }
        @AdminLocationPageForm(data)
    }
}

templ AdminLocationPageForm(data AdminLocationPageData) {
    <form
        hx-trigger="keyup delay:300ms, change from:#approved"
        hx-swap="morph"
        hx-post={ "/admin/locations/" + strconv.Itoa(int(data.Location.ID)) + "/form" }
        id="location-detail-form"
    >
        @AdminNewField(data.New)
        @AdminTextField(data.Location.Name, data.Errors["Name"], "name", "Název *")
        @AdminTextField(data.Location.Street, data.Errors["Street"], "street", "Ulice *")
        @AdminTextField(data.Location.Zip, data.Errors["Zip"], "zip", "PSČ *")
        @AdminTextField(data.Location.City, data.Errors["City"], "city", "Město *")
        @AdminCheckbox(data.Location.Approved, "approved", "Schváleno")
        if data.New {
            <button class="btn btn-primary" type="submit" hx-post="/admin/locations/new">Vytvořit místo</button>
            <a href="/admin/locations" hx-push-url="true" hx-swap="innerHTML" class="btn">Zrušit</a>
        } else {
            <button class="btn btn-primary" type="submit" hx-post={ "/admin/locations/" + strconv.Itoa(int(data.Location.ID)) }>Uložit</button>
            <button
                class="btn"
                hx-delete={ "/admin/locations/" + strconv.Itoa(int(data.Location.ID)) }
                hx-confirm="Opravdu chcete smazat místo?"
            >Smazat</button>
        }
    </form>
}
